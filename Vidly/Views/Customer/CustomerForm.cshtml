@model Vidly.ViewModel.NewCustomerViewModel
@*@model Vidly.Models.Customer*@

@{
    ViewBag.Title = "New";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>New Customer</h2>

@*we can see target action is crete so changing it to save so we can both add or update using the same form*@
@using (Html.BeginForm("Save", "Customer"))
{
    //We can have consolidated errors on the top of the form
    @Html.ValidationSummary(true,"Please fix the below issue")
    //we can have a consolidated issue insted of showing every error we can show consolidated message
    <div class="form-group">
        @Html.LabelFor(m => m.Customer.Name)
        @Html.TextBoxFor(m => m.Customer.Name, new { @class = "form-control" })

        @*adding validation to the form items*@
        @Html.ValidationMessageFor(m => m.Customer.Name)

        @*new {@class="form-control"} is a bootstrap control to specify a class to have a good look*@

    </div>

    @*<div class="form-group">
            @Html.LabelFor(m => m.BirthDate)
            @Html.TextBoxFor(m => m.BirthDate, new { @class = "form-control"})
        </div>*@
    <br />
    <div class="form-group">
        <label for="Birthdate" id="BirthDate">Date of Birth</label>
        @Html.TextBoxFor(m => m.Customer.BirthDate, "{0:d MM yyyy}", new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.Customer.BirthDate)
    </div>
    <br />
    <div class="form-group">
        @Html.LabelFor(m => m.Customer.MembershipTypeID)
        @Html.DropDownListFor(m => m.Customer.MembershipTypeID, new SelectList(Model.MembershipType, "Id", "Name"), "Select Membership Type", new { @class = "form-control" })
        @Html.ValidationMessageFor(m=>m.Customer.MembershipTypeID)
    </div>
    @*<div class="form-group">
            @Html.LabelFor(m => m.IsSuscribedToNewsLetter)
            @Html.CheckBoxFor(m => m.IsSuscribedToNewsLetter, new { @class = "form-control"})
            This is the old code of checkbox but stylying was not good
        </div>*@
    <br />
    <div class="checkbox">
        <label>
            @*<input type="checkbox" />Is Suscribed to newsLetter*@
            @Html.CheckBoxFor(m => m.Customer.IsSuscribedToNewsLetter) Is Suscribed for newsLetter ?
            @*new { @class = "form-control"} this anonymous object was creating problem*@
        </label>
    </div>
    <br />
    //We are relying on customer ID to edit the customer that we also need to pass
    //we are passing ID as hidden field
    @Html.HiddenFor(m => m.Customer.Id)
    <button type="submit" class="btn btn-primary">Save</button>
}
@*Adding to enable client side validation*@
@section scripts{
    @Scripts.Render("~/bundles/jqueryval")
@*we passed address of JQuery bundle*@
    }

